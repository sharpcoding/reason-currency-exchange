// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Belt_List = require("bs-platform/lib/js/belt_List.js");
var AppSettings$ReactHooksTemplate = require("./AppSettings.bs.js");
var HttpService$ReactHooksTemplate = require("./HttpService.bs.js");
var IsoCurrencies$ReactHooksTemplate = require("./IsoCurrencies.bs.js");
var ListItemComponent$ReactHooksTemplate = require("./ListItemComponent.bs.js");

var initialState = /* record */[
  /* currencyInfo : :: */[
    /* record */[
      /* currencyCode */"USD",
      /* point */undefined
    ],
    /* :: */[
      /* record */[
        /* currencyCode */"EUR",
        /* point */undefined
      ],
      /* :: */[
        /* record */[
          /* currencyCode */"CHF",
          /* point */undefined
        ],
        /* :: */[
          /* record */[
            /* currencyCode */"CAD",
            /* point */undefined
          ],
          /* :: */[
            /* record */[
              /* currencyCode */"CZK",
              /* point */undefined
            ],
            /* [] */0
          ]
        ]
      ]
    ]
  ],
  /* loading */false
];

function MainComponent(Props) {
  var match = React.useReducer((function (state, action) {
          if (action) {
            return /* record */[
                    /* currencyInfo */action[0],
                    /* loading */false
                  ];
          } else {
            return /* record */[
                    /* currencyInfo */state[/* currencyInfo */0],
                    /* loading */true
                  ];
          }
        }), initialState);
  var dispatch = match[1];
  var state = match[0];
  React.useEffect((function () {
          Curry._1(dispatch, /* Loading */0);
          var currencies = Belt_List.map(state[/* currencyInfo */0], (function (ci) {
                  return ci[/* currencyCode */0];
                }));
          HttpService$ReactHooksTemplate.fetchCurrencies(currencies, (function (response) {
                  return Curry._1(dispatch, /* Loaded */[response]);
                }));
          return ;
        }), ([]));
  var convertInAppCurrencyToListItem = function (c) {
    var rate = function (param) {
      var match = c[/* point */1];
      if (match !== undefined) {
        return match[/* rate */0].toString();
      } else {
        return "N/A";
      }
    };
    var caption = "Exchange rate of " + (AppSettings$ReactHooksTemplate.baseCurrency + (" to " + (c[/* currencyCode */0] + (": " + rate(/* () */0)))));
    return /* record */[
            /* id */AppSettings$ReactHooksTemplate.baseCurrency + ("-to-" + c[/* currencyCode */0]),
            /* caption */caption,
            /* actions : [] */0
          ];
  };
  var match$1 = state[/* loading */1];
  return React.createElement(React.Fragment, undefined, React.createElement("h3", undefined, "ReasonML demo exchange rate application"), React.createElement("div", undefined, React.createElement("select", {
                      onChange: (function (e) {
                          var x = e.target.value;
                          console.log(x);
                          return /* () */0;
                        })
                    }, Belt_List.toArray(Belt_List.map(IsoCurrencies$ReactHooksTemplate.isoCurrencies, (function (c) {
                                return React.createElement("option", {
                                            value: c[/* currencyCode */0]
                                          }, c[/* currencyCode */0] + ("-" + c[/* currencyDescription */1]));
                              })))), Belt_List.toArray(Belt_List.map(state[/* currencyInfo */0], (function (i) {
                            return React.createElement(ListItemComponent$ReactHooksTemplate.make, {
                                        item: convertInAppCurrencyToListItem(i),
                                        key: i[/* currencyCode */0]
                                      });
                          }))), React.createElement("hr", undefined), match$1 ? React.createElement("div", undefined, "Loading...") : React.createElement("div", undefined, "Data loaded !")));
}

var make = MainComponent;

exports.initialState = initialState;
exports.make = make;
/* react Not a pure module */
