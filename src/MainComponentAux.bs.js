// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var Caml_builtin_exceptions = require("bs-platform/lib/js/caml_builtin_exceptions.js");
var AppSettings$ReactHooksTemplate = require("./AppSettings.bs.js");
var IsoCurrencies$ReactHooksTemplate = require("./IsoCurrencies.bs.js");

function popularityValue(cd) {
  return cd[/* popularity */2];
}

function currenciesfilteredSorted(selectedCurrencies) {
  return List.filter((function (a) {
                  var found;
                  try {
                    found = List.find((function (e) {
                            return e === a[/* currencyCode */0];
                          }), selectedCurrencies);
                  }
                  catch (exn){
                    if (exn === Caml_builtin_exceptions.not_found) {
                      found = "";
                    } else {
                      throw exn;
                    }
                  }
                  return found === "";
                }))(List.sort((function (a, b) {
                    var pva = a[/* popularity */2];
                    var pvb = b[/* popularity */2];
                    return pva - pvb | 0;
                  }), IsoCurrencies$ReactHooksTemplate.isoCurrencies));
}

function convertInAppCurrencyToListItem(c) {
  var rate = function (param) {
    var match = c[/* point */1];
    if (match !== undefined) {
      return match[/* rate */0].toString();
    } else {
      return "N/A";
    }
  };
  var caption = "Exchange rate of " + (AppSettings$ReactHooksTemplate.baseCurrency + (" to " + (c[/* currencyCode */0] + (": " + rate(/* () */0)))));
  return /* record */[
          /* id */c[/* currencyCode */0],
          /* caption */caption,
          /* actions : [] */0
        ];
}

exports.popularityValue = popularityValue;
exports.currenciesfilteredSorted = currenciesfilteredSorted;
exports.convertInAppCurrencyToListItem = convertInAppCurrencyToListItem;
/* No side effect */
